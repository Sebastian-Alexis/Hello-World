---
import AdminLayout from '../../../layouts/AdminLayout.astro';
import { authMiddleware } from '../../../lib/auth/middleware.js';
import { db } from '../../../lib/db/queries.js';

//require admin role for user management
const authResult = await authMiddleware(Astro.request, { 
  required: true,
  roles: ['admin'] //only admins can manage users
});

if (!authResult.success || !authResult.user) {
  return Astro.redirect('/admin/login');
}

//get all users (admin only)
const usersResult = await db.executeQuery(`
  SELECT 
    id, email, username, first_name, last_name, role, 
    is_active, email_verified, last_login_at, created_at
  FROM users 
  ORDER BY created_at DESC
`);

const users = usersResult.rows;
---

<AdminLayout title="User Management" description="Manage website users and permissions">
  <div class="space-y-6">
    <!-- Header with Actions -->
    <div class="flex justify-between items-center">
      <div>
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Users</h2>
        <p class="text-sm text-gray-500 dark:text-gray-400">Manage website users and their permissions</p>
      </div>
      <a 
        href="/admin/users/new"
        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
      >
        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"/>
        </svg>
        Add User
      </a>
    </div>

    <!-- Users Table -->
    <div class="bg-white dark:bg-gray-800 shadow overflow-hidden sm:rounded-md border border-gray-200 dark:border-gray-700">
      <ul class="divide-y divide-gray-200 dark:divide-gray-700">
        {users.map(user => (
          <li>
            <div class="px-4 py-4 sm:px-6 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
              <div class="flex items-center justify-between">
                <div class="flex items-center">
                  <img 
                    class="h-10 w-10 rounded-full bg-gray-300"
                    src={user.avatar_url || '/images/default-avatar.svg'} 
                    alt={`${user.first_name} ${user.last_name}`}
                  />
                  <div class="ml-4">
                    <div class="flex items-center">
                      <p class="text-sm font-medium text-gray-900 dark:text-white">
                        {user.first_name} {user.last_name}
                      </p>
                      <span class={`ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                        user.role === 'admin' ? 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200' :
                        user.role === 'editor' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200' :
                        'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'
                      }`}>
                        {user.role}
                      </span>
                      {!user.is_active && (
                        <span class="ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200">
                          inactive
                        </span>
                      )}
                    </div>
                    <div class="flex items-center text-sm text-gray-500 dark:text-gray-400">
                      <p>{user.email}</p>
                      <span class="mx-2">•</span>
                      <p>@{user.username}</p>
                      {!user.email_verified && (
                        <>
                          <span class="mx-2">•</span>
                          <span class="text-yellow-600 dark:text-yellow-400">Email not verified</span>
                        </>
                      )}
                    </div>
                  </div>
                </div>
                
                <div class="flex items-center space-x-2">
                  <div class="text-right text-sm text-gray-500 dark:text-gray-400">
                    {user.last_login_at ? (
                      <p>Last login: {new Date(user.last_login_at).toLocaleDateString()}</p>
                    ) : (
                      <p>Never logged in</p>
                    )}
                    <p>Joined: {new Date(user.created_at).toLocaleDateString()}</p>
                  </div>
                  
                  <div class="flex items-center space-x-2">
                    <a 
                      href={`/admin/users/${user.id}`}
                      class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-200 text-sm font-medium"
                    >
                      Edit
                    </a>
                    {user.role !== 'admin' && (
                      <button 
                        class="text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 text-sm font-medium"
                        onclick={`confirmDeleteUser('${user.id}', '${user.first_name} ${user.last_name}')`}
                      >
                        Delete
                      </button>
                    )}
                  </div>
                </div>
              </div>
            </div>
          </li>
        ))}
      </ul>
      
      {users.length === 0 && (
        <div class="text-center py-12">
          <svg class="w-12 h-12 mx-auto text-gray-400 mb-4" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"/>
          </svg>
          <p class="text-gray-500 dark:text-gray-400">No users found</p>
        </div>
      )}
    </div>

    <!-- User Statistics -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-md flex items-center justify-center">
              <svg class="w-5 h-5 text-blue-600 dark:text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"/>
              </svg>
            </div>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">Total Users</dt>
              <dd class="text-lg font-medium text-gray-900 dark:text-white">{users.length}</dd>
            </dl>
          </div>
        </div>
      </div>

      <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 bg-green-100 dark:bg-green-900 rounded-md flex items-center justify-center">
              <svg class="w-5 h-5 text-green-600 dark:text-green-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
              </svg>
            </div>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">Active Users</dt>
              <dd class="text-lg font-medium text-gray-900 dark:text-white">
                {users.filter(user => user.is_active).length}
              </dd>
            </dl>
          </div>
        </div>
      </div>

      <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 bg-red-100 dark:bg-red-900 rounded-md flex items-center justify-center">
              <svg class="w-5 h-5 text-red-600 dark:text-red-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z" clip-rule="evenodd"/>
              </svg>
            </div>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">Admins</dt>
              <dd class="text-lg font-medium text-gray-900 dark:text-white">
                {users.filter(user => user.role === 'admin').length}
              </dd>
            </dl>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div id="delete-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white dark:bg-gray-800">
      <div class="mt-3 text-center">
        <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 dark:bg-red-900">
          <svg class="h-6 w-6 text-red-600 dark:text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 14.5c-.77.833.192 2.5 1.732 2.5z"/>
          </svg>
        </div>
        <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white">Delete User</h3>
        <div class="mt-2 px-7 py-3">
          <p class="text-sm text-gray-500 dark:text-gray-400" id="delete-message">
            Are you sure you want to delete this user? This action cannot be undone.
          </p>
        </div>
        <div class="items-center px-4 py-3">
          <button
            id="confirm-delete"
            class="px-4 py-2 bg-red-500 text-white text-base font-medium rounded-md w-24 mr-2 hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-300"
          >
            Delete
          </button>
          <button
            id="cancel-delete"
            class="px-4 py-2 bg-gray-300 dark:bg-gray-600 text-gray-800 dark:text-gray-200 text-base font-medium rounded-md w-24 hover:bg-gray-400 dark:hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-300"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  </div>

  <script>
    let userToDelete = null;

    function confirmDeleteUser(userId, userName) {
      userToDelete = userId;
      document.getElementById('delete-message').textContent = 
        `Are you sure you want to delete "${userName}"? This action cannot be undone.`;
      document.getElementById('delete-modal').classList.remove('hidden');
    }

    document.getElementById('cancel-delete').addEventListener('click', function() {
      document.getElementById('delete-modal').classList.add('hidden');
      userToDelete = null;
    });

    document.getElementById('confirm-delete').addEventListener('click', async function() {
      if (!userToDelete) return;

      try {
        const response = await fetch(`/api/admin/users/${userToDelete}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
          },
        });

        if (response.ok) {
          window.location.reload();
        } else {
          alert('Failed to delete user');
        }
      } catch (error) {
        console.error('Delete error:', error);
        alert('Failed to delete user');
      }

      document.getElementById('delete-modal').classList.add('hidden');
      userToDelete = null;
    });

    //close modal when clicking outside
    document.getElementById('delete-modal').addEventListener('click', function(e) {
      if (e.target === this) {
        this.classList.add('hidden');
        userToDelete = null;
      }
    });

    //make confirmDeleteUser globally available
    window.confirmDeleteUser = confirmDeleteUser;
  </script>
</AdminLayout>