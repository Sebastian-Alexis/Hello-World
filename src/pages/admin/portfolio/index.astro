---
import AdminLayout from '../../../layouts/AdminLayout.astro';
import { db } from '../../../lib/db/queries.js';

//get query parameters
const url = new URL(Astro.request.url);
const page = parseInt(url.searchParams.get('page') || '1');
const search = url.searchParams.get('search') || '';
const status = url.searchParams.get('status') || 'all';
const category = url.searchParams.get('category') || '';
const sortBy = url.searchParams.get('sort') || 'created_at';
const sortOrder = url.searchParams.get('order') || 'DESC';

let projects, totalProjects, categories, stats;

try {
  //get portfolio projects with filters
  const result = await db.getPortfolioProjects({
    page,
    limit: 20,
    search,
    status: status !== 'all' ? status : undefined,
    category: category || undefined,
    sortBy,
    sortOrder
  });
  
  projects = result.data;
  totalProjects = result.total;
  
  //get categories for filter
  categories = await db.getPortfolioCategories();
  
  //get quick stats
  stats = await db.getPortfolioStatistics();
} catch (error) {
  console.error('Portfolio management error:', error);
  projects = [];
  totalProjects = 0;
  categories = [];
  stats = { totalProjects: 0, activeProjects: 0, completedProjects: 0, draftProjects: 0 };
}

const totalPages = Math.ceil(totalProjects / 20);
---

<AdminLayout title="Portfolio Projects" description="Manage your portfolio projects">
  <!-- Header Actions -->
  <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-6">
    <div class="flex items-center space-x-4">
      <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Portfolio Projects</h1>
      <div class="flex space-x-2">
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">
          {stats.activeProjects} Active
        </span>
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
          {stats.completedProjects} Completed
        </span>
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
          {stats.draftProjects} Drafts
        </span>
      </div>
    </div>
    <div class="flex space-x-3">
      <a 
        href="/admin/portfolio/new" 
        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
      >
        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"/>
        </svg>
        New Project
      </a>
      <button 
        id="bulk-actions-btn" 
        class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50"
        disabled
      >
        Bulk Actions
      </button>
    </div>
  </div>

  <!-- Filters -->
  <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 mb-6">
    <form method="GET" class="grid grid-cols-1 md:grid-cols-4 gap-4">
      <!-- Search -->
      <div>
        <label for="search" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
          Search
        </label>
        <input 
          type="text" 
          name="search" 
          id="search" 
          value={search}
          placeholder="Search projects..."
          class="block w-full rounded-md border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
        >
      </div>
      
      <!-- Status Filter -->
      <div>
        <label for="status" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
          Status
        </label>
        <select 
          name="status" 
          id="status" 
          class="block w-full rounded-md border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
        >
          <option value="all" selected={status === 'all'}>All Status</option>
          <option value="active" selected={status === 'active'}>Active</option>
          <option value="completed" selected={status === 'completed'}>Completed</option>
          <option value="archived" selected={status === 'archived'}>Archived</option>
          <option value="draft" selected={status === 'draft'}>Draft</option>
        </select>
      </div>
      
      <!-- Category Filter -->
      <div>
        <label for="category" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
          Category
        </label>
        <select 
          name="category" 
          id="category" 
          class="block w-full rounded-md border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
        >
          <option value="" selected={category === ''}>All Categories</option>
          {categories.map(cat => (
            <option value={cat.slug} selected={category === cat.slug}>
              {cat.name}
            </option>
          ))}
        </select>
      </div>
      
      <!-- Sort Options -->
      <div>
        <label for="sort" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
          Sort By
        </label>
        <div class="flex space-x-2">
          <select 
            name="sort" 
            id="sort" 
            class="flex-1 rounded-md border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
          >
            <option value="created_at" selected={sortBy === 'created_at'}>Date Created</option>
            <option value="updated_at" selected={sortBy === 'updated_at'}>Date Modified</option>
            <option value="title" selected={sortBy === 'title'}>Title</option>
            <option value="status" selected={sortBy === 'status'}>Status</option>
          </select>
          <select 
            name="order" 
            class="rounded-md border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
          >
            <option value="DESC" selected={sortOrder === 'DESC'}>↓</option>
            <option value="ASC" selected={sortOrder === 'ASC'}>↑</option>
          </select>
        </div>
      </div>
      
      <!-- Filter Actions -->
      <div class="md:col-span-4 flex justify-end space-x-3">
        <button 
          type="submit" 
          class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
        >
          Apply Filters
        </button>
        <a 
          href="/admin/portfolio" 
          class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
        >
          Clear
        </a>
      </div>
    </form>
  </div>

  <!-- Projects Grid -->
  <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden">
    {projects.length > 0 ? (
      <div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6 p-6">
        {projects.map(project => (
          <div class="relative group">
            <input 
              type="checkbox" 
              class="project-checkbox absolute top-4 left-4 z-10 rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500"
              value={project.id}
            >
            
            <div class="bg-white dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600 overflow-hidden hover:shadow-lg transition-shadow">
              {project.featured_image && (
                <div class="aspect-video bg-gray-100 dark:bg-gray-600">
                  <img 
                    src={project.featured_image} 
                    alt={project.title}
                    class="w-full h-full object-cover"
                  >
                </div>
              )}
              
              <div class="p-4">
                <div class="flex items-start justify-between mb-2">
                  <h3 class="text-lg font-semibold text-gray-900 dark:text-white truncate">
                    {project.title}
                  </h3>
                  <span class={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                    project.status === 'active' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' :
                    project.status === 'completed' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200' :
                    project.status === 'draft' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200' :
                    'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'
                  }`}>
                    {project.status}
                  </span>
                </div>
                
                <p class="text-sm text-gray-600 dark:text-gray-300 mb-3 line-clamp-2">
                  {project.short_description}
                </p>
                
                {project.category_name && (
                  <span class="inline-block px-2 py-1 text-xs bg-gray-100 dark:bg-gray-600 text-gray-600 dark:text-gray-300 rounded mb-3">
                    {project.category_name}
                  </span>
                )}
                
                <!-- Project Skills/Technologies -->
                {project.skills && project.skills.length > 0 && (
                  <div class="flex flex-wrap gap-1 mb-3">
                    {project.skills.slice(0, 4).map(skill => (
                      <span 
                        class="inline-block px-2 py-1 text-xs text-white rounded"
                        style={`background-color: ${skill.color || '#6B7280'}`}
                      >
                        {skill.name}
                      </span>
                    ))}
                    {project.skills.length > 4 && (
                      <span class="inline-block px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-600 dark:text-gray-300 rounded">
                        +{project.skills.length - 4} more
                      </span>
                    )}
                  </div>
                )}
                
                <div class="flex items-center justify-between mt-4">
                  <div class="text-xs text-gray-500 dark:text-gray-400">
                    {project.featured ? (
                      <span class="inline-flex items-center">
                        <svg class="w-3 h-3 mr-1 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                        </svg>
                        Featured
                      </span>
                    ) : (
                      <span>Updated {new Date(project.updated_at).toLocaleDateString()}</span>
                    )}
                  </div>
                  
                  <div class="flex items-center space-x-2">
                    {project.project_url && (
                      <a 
                        href={project.project_url} 
                        target="_blank"
                        class="text-blue-600 dark:text-blue-400 hover:text-blue-900 dark:hover:text-blue-200"
                        title="View live project"
                      >
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule="evenodd"/>
                        </svg>
                      </a>
                    )}
                    
                    {project.github_url && (
                      <a 
                        href={project.github_url} 
                        target="_blank"
                        class="text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200"
                        title="View GitHub repository"
                      >
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z" clip-rule="evenodd"/>
                        </svg>
                      </a>
                    )}
                    
                    <a 
                      href={`/admin/portfolio/${project.id}`}
                      class="text-green-600 dark:text-green-400 hover:text-green-900 dark:hover:text-green-200"
                      title="Edit project"
                    >
                      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"/>
                      </svg>
                    </a>
                    
                    <button 
                      class="text-red-600 dark:text-red-400 hover:text-red-900 dark:hover:text-red-200"
                      title="Delete project"
                      onclick={`confirmDelete(${project.id}, '${project.title}')`}
                    >
                      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9zM4 5a2 2 0 012-2h8a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V5zM8 7a1 1 0 012 0v4a1 1 0 11-2 0V7zm4 0a1 1 0 112 0v4a1 1 0 11-2 0V7z" clip-rule="evenodd"/>
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <svg class="w-12 h-12 mx-auto text-gray-400 mb-4" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h4a1 1 0 010 2H6.414l2.293 2.293a1 1 0 01-1.414 1.414L5 6.414V8a1 1 0 01-2 0V4zm9 1a1 1 0 010-2h4a1 1 0 011 1v4a1 1 0 01-2 0V6.414l-2.293 2.293a1 1 0 11-1.414-1.414L13.586 5H12zm-9 7a1 1 0 012 0v1.586l2.293-2.293a1 1 0 111.414 1.414L6.414 15H8a1 1 0 010 2H4a1 1 0 01-1-1v-4zm13-1a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 010-2h1.586l-2.293-2.293a1 1 0 111.414-1.414L15.586 13H14a1 1 0 01-1-1z" clip-rule="evenodd"/>
        </svg>
        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No projects found</h3>
        <p class="text-gray-500 dark:text-gray-400 mb-4">
          {search || status !== 'all' || category 
            ? 'Try adjusting your filters or search terms.'
            : 'Get started by creating your first project.'
          }
        </p>
        <a 
          href="/admin/portfolio/new" 
          class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
        >
          Create New Project
        </a>
      </div>
    )}
  </div>

  <!-- Pagination -->
  {totalPages > 1 && (
    <div class="flex items-center justify-between mt-6">
      <div class="text-sm text-gray-700 dark:text-gray-300">
        Showing {((page - 1) * 20) + 1} to {Math.min(page * 20, totalProjects)} of {totalProjects} projects
      </div>
      <div class="flex space-x-2">
        {page > 1 && (
          <a 
            href={`?page=${page - 1}&search=${search}&status=${status}&category=${category}&sort=${sortBy}&order=${sortOrder}`}
            class="px-3 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700"
          >
            Previous
          </a>
        )}
        
        {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {
          const pageNum = Math.max(1, Math.min(totalPages - 4, page - 2)) + i;
          return pageNum <= totalPages ? (
            <a 
              href={`?page=${pageNum}&search=${search}&status=${status}&category=${category}&sort=${sortBy}&order=${sortOrder}`}
              class={`px-3 py-2 border text-sm font-medium rounded-md ${
                pageNum === page 
                  ? 'border-blue-500 text-blue-600 bg-blue-50 dark:bg-blue-900 dark:text-blue-200' 
                  : 'border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'
              }`}
            >
              {pageNum}
            </a>
          ) : null;
        })}
        
        {page < totalPages && (
          <a 
            href={`?page=${page + 1}&search=${search}&status=${status}&category=${category}&sort=${sortBy}&order=${sortOrder}`}
            class="px-3 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700"
          >
            Next
          </a>
        )}
      </div>
    </div>
  )}
</AdminLayout>

<!-- Similar bulk actions and delete modals as in blog management -->
<div id="bulk-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white dark:bg-gray-800">
    <div class="mt-3 text-center">
      <h3 class="text-lg font-medium text-gray-900 dark:text-white">Bulk Actions</h3>
      <div class="mt-4 space-y-3">
        <button id="bulk-activate" class="w-full px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700">
          Activate Selected
        </button>
        <button id="bulk-complete" class="w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
          Mark as Completed
        </button>
        <button id="bulk-archive" class="w-full px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700">
          Archive Selected
        </button>
        <button id="bulk-delete" class="w-full px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700">
          Delete Selected
        </button>
      </div>
      <div class="mt-4">
        <button id="close-bulk-modal" class="px-4 py-2 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-400 dark:hover:bg-gray-500">
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>

<div id="delete-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white dark:bg-gray-800">
    <div class="mt-3 text-center">
      <svg class="w-12 h-12 mx-auto text-red-600 mb-4" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9zM4 5a2 2 0 012-2h8a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V5zM8 7a1 1 0 012 0v4a1 1 0 11-2 0V7zm4 0a1 1 0 112 0v4a1 1 0 11-2 0V7z" clip-rule="evenodd"/>
      </svg>
      <h3 class="text-lg font-medium text-gray-900 dark:text-white">Delete Project</h3>
      <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">
        Are you sure you want to delete "<span id="delete-project-title"></span>"? This action cannot be undone.
      </p>
      <div class="mt-6 flex justify-center space-x-3">
        <button id="confirm-delete" class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700">
          Delete
        </button>
        <button id="cancel-delete" class="px-4 py-2 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-400 dark:hover:bg-gray-500">
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  //similar bulk actions and delete functionality as blog management
  document.addEventListener('DOMContentLoaded', function() {
    const projectCheckboxes = document.querySelectorAll('.project-checkbox');
    const bulkActionsBtn = document.getElementById('bulk-actions-btn');
    const bulkModal = document.getElementById('bulk-modal');
    const deleteModal = document.getElementById('delete-modal');
    
    let selectedProjects = [];
    let projectToDelete = null;
    
    //handle individual selections
    projectCheckboxes.forEach(checkbox => {
      checkbox.addEventListener('change', updateBulkActions);
    });
    
    function updateBulkActions() {
      selectedProjects = Array.from(projectCheckboxes)
        .filter(cb => cb.checked)
        .map(cb => cb.value);
      
      bulkActionsBtn.disabled = selectedProjects.length === 0;
      bulkActionsBtn.textContent = selectedProjects.length > 0 
        ? `Bulk Actions (${selectedProjects.length})` 
        : 'Bulk Actions';
    }
    
    //show bulk actions modal
    bulkActionsBtn?.addEventListener('click', function() {
      if (selectedProjects.length > 0) {
        bulkModal.classList.remove('hidden');
      }
    });
    
    //close bulk modal
    document.getElementById('close-bulk-modal')?.addEventListener('click', function() {
      bulkModal.classList.add('hidden');
    });
    
    //delete confirmation
    window.confirmDelete = function(projectId, projectTitle) {
      projectToDelete = projectId;
      document.getElementById('delete-project-title').textContent = projectTitle;
      deleteModal.classList.remove('hidden');
    };
    
    //cancel delete
    document.getElementById('cancel-delete')?.addEventListener('click', function() {
      deleteModal.classList.add('hidden');
      projectToDelete = null;
    });
    
    //confirm delete
    document.getElementById('confirm-delete')?.addEventListener('click', async function() {
      if (projectToDelete) {
        try {
          const response = await fetch(`/api/admin/portfolio/${projectToDelete}`, {
            method: 'DELETE',
            headers: {
              'Authorization': `Bearer ${localStorage.getItem('access_token')}`
            }
          });
          
          if (response.ok) {
            window.location.reload();
          } else {
            alert('Failed to delete project');
          }
        } catch (error) {
          console.error('Delete error:', error);
          alert('Failed to delete project');
        }
      }
    });
    
    //bulk actions
    document.getElementById('bulk-activate')?.addEventListener('click', () => performBulkAction('activate'));
    document.getElementById('bulk-complete')?.addEventListener('click', () => performBulkAction('complete'));
    document.getElementById('bulk-archive')?.addEventListener('click', () => performBulkAction('archive'));
    document.getElementById('bulk-delete')?.addEventListener('click', () => performBulkAction('delete'));
    
    async function performBulkAction(action) {
      try {
        const response = await fetch('/api/admin/portfolio/bulk', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${localStorage.getItem('access_token')}`
          },
          body: JSON.stringify({
            action,
            projectIds: selectedProjects
          })
        });
        
        if (response.ok) {
          window.location.reload();
        } else {
          alert(`Failed to ${action} projects`);
        }
      } catch (error) {
        console.error('Bulk action error:', error);
        alert(`Failed to ${action} projects`);
      }
    }
  });
</script>