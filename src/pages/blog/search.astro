---
// =============================================================================
// BLOG SEARCH PAGE - Search results with advanced filtering and pagination
// Displays search results with category/tag filters and sorting options
// =============================================================================

import Layout from '@/layouts/Layout.astro';
import BlogCard from '@/components/blog/BlogCard.astro';
import SearchBox from '@/components/blog/SearchBox.svelte';
import Pagination from '@/components/blog/Pagination.astro';
import CategoryTag from '@/components/blog/CategoryTag.astro';
import { db } from '@/lib/db/queries';
import type { BlogPost, BlogCategory, BlogTag } from '@/lib/db/types';

//get query parameters
const url = Astro.url;
const query = url.searchParams.get('q') || '';
const page = parseInt(url.searchParams.get('page') || '1');
const category = url.searchParams.get('category');
const tag = url.searchParams.get('tag');
const sort = url.searchParams.get('sort') || 'relevance';
const perPage = 12;

//search results
let posts: (BlogPost & { snippet?: string; rank?: number })[] = [];
let totalPosts = 0;
let totalPages = 0;
let searchTime = 0;
let currentCategory: BlogCategory | null = null;
let currentTag: BlogTag | null = null;

//perform search if query exists
if (query.trim().length >= 2) {
  try {
    const startTime = Date.now();
    
    const result = await db.searchBlogPosts({
      query: query.trim(),
      page,
      limit: perPage,
      category,
      tag,
      orderBy: sort === 'date' ? 'published_at' : sort === 'views' ? 'view_count' : 'rank',
      orderDirection: sort === 'relevance' ? 'DESC' : 'DESC',
    });
    
    posts = result.posts;
    totalPosts = result.total;
    totalPages = Math.ceil(totalPosts / perPage);
    searchTime = Date.now() - startTime;

    //get current category/tag info for display
    if (category) {
      const categories = await db.getAllCategories();
      currentCategory = categories.find(c => c.slug === category) || null;
    }
    
    if (tag) {
      const tags = await db.getAllTags();
      currentTag = tags.find(t => t.slug === tag) || null;
    }
  } catch (error) {
    console.error('Search failed:', error);
  }
}

//fetch categories and tags for filters
let categories: BlogCategory[] = [];
let tags: BlogTag[] = [];

try {
  [categories, tags] = await Promise.all([
    db.getAllCategories(),
    db.getAllTags({ limit: 20, minPosts: 1 })
  ]);
} catch (error) {
  console.error('Failed to fetch categories/tags:', error);
}

//build query params for pagination
const queryParams: Record<string, string> = { q: query };
if (category) queryParams.category = category;
if (tag) queryParams.tag = tag;
if (sort !== 'relevance') queryParams.sort = sort;

//page title and description
const pageTitle = query 
  ? `Search results for "${query}" - Blog`
  : 'Search Blog Posts';

const pageDescription = query
  ? `${totalPosts} search results for "${query}". Find blog posts on technology, programming, and more.`
  : 'Search our blog posts to find content on technology, programming, and more.';

//structured data for search results
const structuredData = posts.length > 0 ? {
  "@context": "https://schema.org",
  "@type": "SearchResultsPage",
  "name": pageTitle,
  "description": pageDescription,
  "url": Astro.url.toString(),
  "mainEntity": {
    "@type": "ItemList",
    "numberOfItems": totalPosts,
    "itemListElement": posts.map((post, index) => ({
      "@type": "ListItem",
      "position": (page - 1) * perPage + index + 1,
      "item": {
        "@type": "BlogPosting",
        "headline": post.title,
        "url": `${Astro.url.origin}/blog/${post.slug}`,
        "datePublished": post.published_at,
        "dateModified": post.updated_at,
        "author": {
          "@type": "Person",
          "name": post.author_name,
        },
        ...(post.excerpt && { "description": post.excerpt }),
        ...(post.featured_image_url && { 
          "image": {
            "@type": "ImageObject",
            "url": post.featured_image_url
          }
        }),
      }
    }))
  }
} : undefined;
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  structuredData={structuredData}
>
  <main class="min-h-screen bg-gray-50 dark:bg-gray-900">
    
    <!-- Hero Section -->
    <section class="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700">
      <div class="max-w-7xl mx-auto px-4 py-12 sm:px-6 lg:px-8">
        <div class="text-center">
          <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
            {query ? `Search Results` : 'Search Blog Posts'}
          </h1>
          {query && (
            <p class="text-xl text-gray-600 dark:text-gray-300 mb-2">
              {totalPosts > 0 
                ? `${totalPosts} ${totalPosts === 1 ? 'result' : 'results'} for "${query}"`
                : `No results found for "${query}"`
              }
            </p>
          )}
          {searchTime > 0 && (
            <p class="text-sm text-gray-500 dark:text-gray-400 mb-8">
              Search completed in {searchTime}ms
            </p>
          )}
          
          <!-- Search Box -->
          <div class="max-w-2xl mx-auto">
            <SearchBox 
              client:load
              showCategories={true} 
              showTags={true}
              autoFocus={!query}
            />
          </div>
        </div>
      </div>
    </section>

    <div class="max-w-7xl mx-auto px-4 py-8 sm:px-6 lg:px-8">
      
      {query.trim().length < 2 && (
        <!-- Search Prompt -->
        <div class="text-center py-16">
          <svg class="w-16 h-16 mx-auto text-gray-400 dark:text-gray-500 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
          <h2 class="text-2xl font-medium text-gray-900 dark:text-white mb-2">
            Search our blog
          </h2>
          <p class="text-gray-600 dark:text-gray-400 mb-8">
            Enter at least 2 characters to search through our blog posts.
          </p>
          <a 
            href="/blog"
            class="inline-flex items-center px-6 py-3 text-base font-medium text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 hover:bg-blue-100 dark:hover:bg-blue-900/30 rounded-lg transition-colors duration-200"
          >
            Browse all posts
            <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
            </svg>
          </a>
        </div>
      )}

      {query.trim().length >= 2 && (
        <div class="lg:grid lg:grid-cols-4 lg:gap-8">
          
          <!-- Sidebar -->
          <aside class="lg:col-span-1 mb-8 lg:mb-0">
            
            <!-- Active Filters -->
            {(currentCategory || currentTag) && (
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-6">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                  Active Filters
                </h3>
                <div class="space-y-2">
                  {currentCategory && (
                    <div class="flex items-center justify-between">
                      <CategoryTag item={currentCategory} type="category" size="sm" clickable={false} />
                      <a href={`/blog/search?q=${encodeURIComponent(query)}`} class="text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                      </a>
                    </div>
                  )}
                  {currentTag && (
                    <div class="flex items-center justify-between">
                      <CategoryTag item={currentTag} type="tag" size="sm" clickable={false} />
                      <a href={`/blog/search?q=${encodeURIComponent(query)}`} class="text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                      </a>
                    </div>
                  )}
                </div>
              </div>
            )}

            <!-- Sort Options -->
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-6">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Sort By
              </h3>
              <div class="space-y-2">
                <a 
                  href={`/blog/search?q=${encodeURIComponent(query)}${category ? `&category=${category}` : ''}${tag ? `&tag=${tag}` : ''}`}
                  class={`block px-3 py-2 rounded-md text-sm transition-colors duration-200 ${
                    sort === 'relevance' 
                      ? 'bg-blue-100 dark:bg-blue-900 text-blue-900 dark:text-blue-100' 
                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'
                  }`}
                >
                  Most Relevant
                </a>
                <a 
                  href={`/blog/search?q=${encodeURIComponent(query)}&sort=date${category ? `&category=${category}` : ''}${tag ? `&tag=${tag}` : ''}`}
                  class={`block px-3 py-2 rounded-md text-sm transition-colors duration-200 ${
                    sort === 'date' 
                      ? 'bg-blue-100 dark:bg-blue-900 text-blue-900 dark:text-blue-100' 
                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'
                  }`}
                >
                  Newest First
                </a>
                <a 
                  href={`/blog/search?q=${encodeURIComponent(query)}&sort=views${category ? `&category=${category}` : ''}${tag ? `&tag=${tag}` : ''}`}
                  class={`block px-3 py-2 rounded-md text-sm transition-colors duration-200 ${
                    sort === 'views' 
                      ? 'bg-blue-100 dark:bg-blue-900 text-blue-900 dark:text-blue-100' 
                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'
                  }`}
                >
                  Most Popular
                </a>
              </div>
            </div>

            <!-- Filter by Categories -->
            {categories.length > 0 && (
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-6">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                  Filter by Category
                </h3>
                <div class="space-y-2">
                  {categories.map(cat => (
                    <a
                      href={`/blog/search?q=${encodeURIComponent(query)}&category=${cat.slug}${tag ? `&tag=${tag}` : ''}${sort !== 'relevance' ? `&sort=${sort}` : ''}`}
                      class="flex items-center justify-between px-3 py-2 rounded-md text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200"
                    >
                      <CategoryTag item={cat} type="category" size="xs" clickable={false} />
                      <span class="text-xs text-gray-500 dark:text-gray-400">
                        {cat.post_count}
                      </span>
                    </a>
                  ))}
                </div>
              </div>
            )}

            <!-- Filter by Tags -->
            {tags.length > 0 && (
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                  Filter by Tag
                </h3>
                <div class="flex flex-wrap gap-2">
                  {tags.map(tagItem => (
                    <a
                      href={`/blog/search?q=${encodeURIComponent(query)}&tag=${tagItem.slug}${category ? `&category=${category}` : ''}${sort !== 'relevance' ? `&sort=${sort}` : ''}`}
                      class="inline-block"
                    >
                      <CategoryTag item={tagItem} type="tag" size="xs" />
                    </a>
                  ))}
                </div>
              </div>
            )}

          </aside>

          <!-- Main Content -->
          <div class="lg:col-span-3">
            
            <!-- Results Info -->
            <div class="flex items-center justify-between mb-6">
              <div class="text-sm text-gray-600 dark:text-gray-400">
                {totalPosts > 0 ? (
                  `Showing ${(page - 1) * perPage + 1}-${Math.min(page * perPage, totalPosts)} of ${totalPosts} results`
                ) : (
                  'No results found'
                )}
              </div>
              
              {totalPages > 1 && (
                <div class="flex items-center space-x-2">
                  <span class="text-sm text-gray-600 dark:text-gray-400">Page {page} of {totalPages}</span>
                </div>
              )}
            </div>

            <!-- Search Results -->
            {posts.length > 0 ? (
              <div>
                <div class="space-y-8 mb-12">
                  {posts.map(post => (
                    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200">
                      <div class="p-6">
                        <div class="flex flex-col md:flex-row md:space-x-6">
                          
                          <!-- Featured Image -->
                          {post.featured_image_url && (
                            <div class="md:w-48 md:flex-shrink-0 mb-4 md:mb-0">
                              <a href={`/blog/${post.slug}`}>
                                <img
                                  src={post.featured_image_url}
                                  alt={post.title}
                                  class="w-full h-32 md:h-32 object-cover rounded-lg"
                                  loading="lazy"
                                />
                              </a>
                            </div>
                          )}

                          <!-- Content -->
                          <div class="flex-1">
                            
                            <!-- Categories -->
                            {post.categories && post.categories.length > 0 && (
                              <div class="flex flex-wrap gap-2 mb-3">
                                {post.categories.slice(0, 2).map(category => (
                                  <CategoryTag item={category} type="category" size="xs" />
                                ))}
                              </div>
                            )}

                            <!-- Title -->
                            <h3 class="text-xl font-bold mb-3">
                              <a 
                                href={`/blog/${post.slug}`}
                                class="text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200"
                              >
                                {post.title}
                              </a>
                            </h3>

                            <!-- Snippet -->
                            {post.snippet ? (
                              <div class="text-gray-600 dark:text-gray-300 mb-4 leading-relaxed">
                                <Fragment set:html={post.snippet} />
                              </div>
                            ) : post.excerpt ? (
                              <p class="text-gray-600 dark:text-gray-300 mb-4 leading-relaxed">
                                {post.excerpt.length > 200 ? post.excerpt.substring(0, 200) + '...' : post.excerpt}
                              </p>
                            ) : null}

                            <!-- Meta -->
                            <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400">
                              <div class="flex items-center space-x-4">
                                {post.author_name && (
                                  <span>{post.author_name}</span>
                                )}
                                {post.published_at && (
                                  <time datetime={post.published_at}>
                                    {new Date(post.published_at).toLocaleDateString()}
                                  </time>
                                )}
                                {post.reading_time && (
                                  <span>{post.reading_time} min read</span>
                                )}
                              </div>
                              
                              {post.rank && sort === 'relevance' && (
                                <div class="text-xs bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded">
                                  {Math.round(post.rank * 100)}% match
                                </div>
                              )}
                            </div>

                          </div>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>

                <!-- Pagination -->
                {totalPages > 1 && (
                  <Pagination
                    currentPage={page}
                    totalPages={totalPages}
                    basePath="/blog/search"
                    queryParams={queryParams}
                    showInfo={false}
                    className="mt-12"
                  />
                )}
              </div>
            ) : (
              <!-- No Results -->
              <div class="text-center py-16">
                <svg class="w-16 h-16 mx-auto text-gray-400 dark:text-gray-500 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                        d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                <h3 class="text-xl font-medium text-gray-900 dark:text-white mb-2">
                  No results found
                </h3>
                <p class="text-gray-600 dark:text-gray-400 mb-6">
                  We couldn't find any posts matching your search for "{query}".
                  {currentCategory || currentTag ? ' Try removing filters or adjusting your search terms.' : ' Try different keywords or browse all posts.'}
                </p>
                <div class="flex flex-col sm:flex-row gap-4 justify-center">
                  {(currentCategory || currentTag) && (
                    <a 
                      href={`/blog/search?q=${encodeURIComponent(query)}`}
                      class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 hover:bg-blue-100 dark:hover:bg-blue-900/30 rounded-lg transition-colors duration-200"
                    >
                      Remove filters
                    </a>
                  )}
                  <a 
                    href="/blog"
                    class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg transition-colors duration-200"
                  >
                    Browse all posts
                  </a>
                </div>
              </div>
            )}

          </div>
        </div>
      )}

    </div>

  </main>
</Layout>